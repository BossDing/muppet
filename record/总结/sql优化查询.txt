
A a B b条数据
 select * from tb_userinfo  tuser left join tb_studyinfo tstudyinfo on tuser.user_id = tstudyinfo.user_id;
 左外连接，左侧列均出现，右侧有匹配项出现，则补充上，否则相关项为空

2.内连接 inner join 只返回匹配的行 
3.右链接，返回匹配条件的行加上右表中的数据 
4.完全连接，返回匹配条件的行，加上左右未匹配的行 
5.交叉连接：返回两表的的笛卡尔积。然后按照条件过滤

			SELECT语句的语法结构

					虽然SELECT语句的完整语法较复杂，但其主要子句可归纳如下：

					SELECT select_list

					[ INTO new_table]

					FROM table_source

					[ WHERE search_condition]

					[ GROUP BY group_by_expression]

					[ HAVING search_condition]

					[ ORDER BY order_expression [ ASC|DESC ] ]

			必需的子句只有SELECT子句和FROM子句，其他的子句都是可选的。各子句具体含义如下：

			―    SELECT子句：指定由查询返回的列。

			―    INTO子句：将检索结果存储到新表或视图中。

			―    FROM子句：用于指定引用的列所在的表或视图。如果对象不止一个，那么它们之间必须用逗号分开。

			―    WHERE子句：指定用于限制返回的行的搜索条件。如果SELECT语句没有WHERE子句，DBMS假设目标表中的所有行都满足搜索条件。

			―    GROUP BY子句：指定用来放置输出行的组，并且如果SELECT子句<select list>中包含聚合函数，则计算每组的汇总值。

			―    HAVING子句：指定组或聚合的搜索条件。HAVING通常与GROUP BY子句一起使用。如果不使用GROUP BY子句，HAVING的行为与WHERE子句一样。

			―    ORDER BY子句：指定结果集的排序。ASC关键字表示升序排列结果，DESC关键字表示降序排列结果。如果没有指定任何一个关键字，那么ASC就是默认的关键字。如果没有ORDER BY子句，DBMS将根据输入表中的数据的存放位置来显示数据。
		
MySQL的语句执行顺序

MySQL的语句一共分为11步，如下图所标注的那样，最先执行的总是FROM操作，最后执行的是LIMIT操作。其中每一个操作都会产生一张虚拟的表，这个虚拟的表作为一个处理的输入，只是这些虚拟的表对用户来说是透明的，但是只有最后一个虚拟的表才会被作为结果返回。如果没有在语句中指定某一个子句，那么将会跳过相应的步骤。

下面我们来具体分析一下查询处理的每一个阶段

    FORM: 对FROM的左边的表和右边的表计算笛卡尔积。产生虚表VT1
    ON: 对虚表VT1进行ON筛选，只有那些符合<join-condition>的行才会被记录在虚表VT2中。
    JOIN： 如果指定了OUTER JOIN（比如left join、 right join），那么保留表中未匹配的行就会作为外部行添加到虚拟表VT2中，产生虚拟表VT3, rug from子句中包含两个以上的表的话，那么就会对上一个join连接产生的结果VT3和下一个表重复执行步骤1~3这三个步骤，一直到处理完所有的表为止。
    WHERE： 对虚拟表VT3进行WHERE条件过滤。只有符合<where-condition>的记录才会被插入到虚拟表VT4中。
    GROUP BY: 根据group by子句中的列，对VT4中的记录进行分组操作，产生VT5.
    CUBE | ROLLUP: 对表VT5进行cube或者rollup操作，产生表VT6.
    HAVING： 对虚拟表VT6应用having过滤，只有符合<having-condition>的记录才会被 插入到虚拟表VT7中。
    SELECT： 执行select操作，选择指定的列，插入到虚拟表VT8中。
    DISTINCT： 对VT8中的记录进行去重。产生虚拟表VT9.
    ORDER BY: 将虚拟表VT9中的记录按照<order_by_list>进行排序操作，产生虚拟表VT10.
    LIMIT：取出指定行的记录，产生虚拟表VT11, 并将结果返回。
  引用：http://www.cnblogs.com/rollenholt/p/3776923.html